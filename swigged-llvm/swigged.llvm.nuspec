<?xml version="1.0"?>
<package >
  <metadata>
    <!-- The identifier that must be unique within the hosting gallery -->
    <id>swigged.llvm</id>

    <version>4.0.7-alpha</version>

    <!-- Authors contain text that appears directly on the gallery -->
    <authors>Ken Domino</authors>
    
    <!-- Owners are typically nuget.org identities that allow gallery
            users to easily find other packages by the same owners.
    -->
    <owners>Ken Domino</owners>

    <!-- License, project, icon links for the gallery -->
    <projectUrl>https://github.com/kaby76/swigged-llvm</projectUrl>
    <iconUrl>https://raw.github.com/kaby76/swigged-llvm/master/logo.png</iconUrl>
    <licenseUrl>https://raw.github.com/kaby76/swigged-llvm/master/LICENSE</licenseUrl>

    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>A SWIG-generated C# API of LLVM-C.</description>
    <releaseNotes>
* Version 4.0.7-alpha
- Added in Android builds.

* Version 4.0.6-alpha
- Added in fixes for VerifyModule, CreateMCJITCompilerForModule, MCJITCompilerOptions, InitializeMCJITCompilerOptions, MyString.
       
Object files provided in this package are a Release build, Net Standard, and native runtimes.

When building with Swigged.llvm, select Platform = "AnyCPU", config = "Debug" or "Release".

On Windows, in the properties for the executable, un-check "Prefer 32-bit" in Build properties, and check "Enable native code debugging". If you are using Net Core or Standard, this option is unavailable--I'm not sure why it is.

On Ubuntu, use Net Core to build your C# program.

For further information, see https://github.com/kaby76/swigged-llvm.
    </releaseNotes>

    <!-- Copyright information -->
    <copyright>Copyright Â© 2017</copyright>

    <!-- Tags appear in the gallery and can be used for tag searches -->
    <tags>LLVM SWIG native</tags>

    <!-- Dependencies are automatically installed when the package is
    installed -->
    <!-- For full list, see
    https://docs.microsoft.com/en-us/nuget/schema/target-frameworks
    Note, I have seen some targetFramework="..." with some
    undocumented strings: ".NETFramework4.6.2", ".NETFramework4.5.2",
    ... Not sure if they work. --> 
    <dependencies>
      <group targetFramework="net45">
	<dependency id="NetStandard.Library" version="[1.6,)" />
	<dependency id="System.Runtime" version="[4.1,)" />
      </group>
      <group targetFramework="net451">
	<dependency id="NetStandard.Library" version="[1.6,)" />
	<dependency id="System.Runtime" version="[4.1,)" />
      </group>
      <group targetFramework="net46">
	<dependency id="NetStandard.Library" version="[1.6,)" />
	<dependency id="System.Runtime" version="[4.1,)" />
      </group>
      <group targetFramework="net461">
	<dependency id="NetStandard.Library" version="[1.6,)" />
	<dependency id="System.Runtime" version="[4.1,)" />
      </group>
      <group targetFramework="net462">
	<dependency id="NetStandard.Library" version="[1.6,)" />
	<dependency id="System.Runtime" version="[4.1,)" />
      </group>
      <group targetFramework="net47">
	<dependency id="NetStandard.Library" version="[1.6,)" />
	<dependency id="System.Runtime" version="[4.1,)" />
      </group>

      <group targetFramework="netcore" />
      <group targetFramework="netstandard1.1" />
      <group targetFramework="netstandard1.2" />
      <group targetFramework="netstandard1.3" />
      <group targetFramework="netstandard1.4" />
      <group targetFramework="netstandard1.5" />
      <group targetFramework="netstandard1.6" />
      <group targetFramework="netstandard2.0" />
      
<!--      <group targetFramework="Xamarin.iOS10">
      <group targetFramework="Xamarin.Mac20">      
      <group targetFramework="MonoAndroid">
-->
      
    </dependencies>
  </metadata>
  
  <files>
    <!-- There are two possible native dll's, for
     Release configuration, and x86 or x64 platform targets. As Nuget
     does not understand "x86" or "x64" platform targets, place these
     in an non-Nuget directory (i.e., not "build", "lib", etc.).
     -->
    <file src="swigged.llvm.native\x86-Release\Release\swigged-llvm-native.dll" target="win10-x86" />
    <file src="swigged.llvm.native\x64-Release\Release\swigged-llvm-native.dll" target="win10-x64" />
    <file src="swigged.llvm.native\ubuntu-16.04-Release\swigged-llvm-native.so" target="ubuntu-16.04-x64" />
    <file src="swigged.llvm.native\android-arm64-Release\swigged-llvm-native.so" target="ubuntu-16.04-x64" />
    <file src="swigged.llvm.native\ubuntu-16.04-Release\swigged-llvm-native.so" target="ubuntu-16.04-x64" />

    <!-- There are three possible dll's for std.swigged.llvm,
    corresponding to Release configuration, and the three
    target frameworks, net45, net461, and netstandard1.6. Platform
    targets do not matter for the code as the MSIL is the same
    regardless. 
    -->
    <file src="std.swigged.llvm\bin\Release\netstandard1.1\std.swigged.llvm.dll" target="lib\netstandard1.1" />
    <file src="std.swigged.llvm\bin\Release\netstandard1.1\std.swigged.llvm.pdb" target="lib\netstandard1.1" />
    
<!--    <file src="swigged.llvm.targets" target="build\swigged.llvm.targets" /> -->

  </files>
</package>
