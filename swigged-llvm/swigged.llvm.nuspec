<?xml version="1.0"?>
<package >
  <metadata>
    <!-- The identifier that must be unique within the hosting gallery -->
    <id>swigged.llvm</id>

    <version>4.0.1.2-alpha</version>

    <!-- Authors contain text that appears directly on the gallery -->
    <authors>Ken Domino</authors>
    
    <!-- Owners are typically nuget.org identities that allow gallery
            users to easily find other packages by the same owners.
    -->
    <owners>Ken Domino</owners>

    <!-- License, project, icon links for the gallery -->
    <projectUrl>https://github.com/kaby76/swigged-llvm</projectUrl>
    <iconUrl>https://raw.github.com/kaby76/swigged-llvm/master/logo.png</iconUrl>
    <licenseUrl>https://raw.github.com/kaby76/swigged-llvm/master/LICENSE</licenseUrl>

    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>A SWIG-generated C# API of the C API of LLVM.</description>
    <releaseNotes>4.0.1.2-alpha, using LLVM version 4.0.1. In this release, NET Standard target with net461, netstandard1.6, net45 target implementation frameworks.

See http://138.197.39.133:9000/index.html for details of the API.

Make sure to enable unmanaged debugging (true), and unsafe code (true).

Note, this API is a little large, as LLVM was configured to generate code for all available targets. If you want to configure and build a subset, see https://github.com/kaby76/swigged-llvm. After installing the package, select the platform then save, close, and re-open your project/solution.
    </releaseNotes>

    <!-- Copyright information -->
    <copyright>Copyright © 2017</copyright>

    <!-- Tags appear in the gallery and can be used for tag searches -->
    <tags>LLVM SWIG native</tags>

    <!-- Dependencies are automatically installed when the package is installed -->
    <dependencies>
    </dependencies>
  </metadata>
  
  <files>
    <!-- There are two possible native dll's, for
     Release configuration, and x86 or x64 platform targets. As Nuget
     does not understand "x86" or "x64" platform targets, place these
     in an non-Nuget directory (i.e., not "build", "lib", etc.).
     -->
    <file src="x86\Release\swigged.llvm.native.dll" target="x86" />
    <file src="x86\Release\swigged.llvm.native.pdb" target="x86" />
    <file src="x64\Release\swigged.llvm.native.dll" target="x64" />
    <file src="x64\Release\swigged.llvm.native.pdb" target="x64" />

    <!-- There are three possible dll's for std.swigged.llvm,
    corresponding to Release configuration, and the three
    target frameworks, net45, net461, and netstandard1.6. Platform
    targets do not matter for the code as the MSIL is the same
    regardless. 
    -->
    <file src="std.swigged.llvm\bin\Release\net45\std.swigged.llvm.dll" target="lib\net45" />
    <file src="std.swigged.llvm\bin\Release\net45\std.swigged.llvm.pdb" target="lib\net45" />
    <file src="std.swigged.llvm\bin\Release\net461\std.swigged.llvm.dll" target="lib\net461" />
    <file src="std.swigged.llvm\bin\Release\net461\std.swigged.llvm.pdb" target="lib\net461" />
    <file src="std.swigged.llvm\bin\Release\netstandard1.6\std.swigged.llvm.dll" target="lib\netstandard1.6" />
    <file src="std.swigged.llvm\bin\Release\netstandard1.6\std.swigged.llvm.pdb" target="lib\netstandard1.6" />
    
    <!-- There are 2 possible dll's for swigged.llvm,
    corresponding to Release configuration, and the
    target framework net461. Platform
    targets do not matter for the code as the MSIL is the same
    regardless.

    Note: We don't include because std.swigged.llvm works.

    <file src="swigged.llvm\bin\Release\swigged.llvm.dll" target="lib\net461" />
    <file src="swigged.llvm\bin\Release\swigged.llvm.pdb" target="lib\net461" />
    -->
    <file src="swigged.llvm.targets" target="build\swigged.llvm.targets" />

  </files>
</package>